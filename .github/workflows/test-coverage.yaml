on:
  push:
    branches:
      - main
    paths: ["R/**", "tests/**", "**/test-coverage.yaml"]
  pull_request:
    branches:
      - main
    paths: ["R/**", "tests/**", "**/test-coverage.yaml"]
  workflow_dispatch:
    branches:
      - main
    paths: ["R/**", "tests/**", "**/test-coverage.yaml"]

name: test-coverage

jobs:
  test-coverage:
    runs-on: ubuntu-20.04
    env:
      GITHUB_PAT: ${{ secrets.GH_TOKEN }}
      GITHUB_ACTIONS_RUN_DB_UNIT_TESTS: true
      DB_HOST: "localhost"
      DB_USER: "root"
      DB_PASS: "root"
    steps:
      - uses: actions/checkout@v4

      - name: Install unmet sys deps
        run: |
          sudo apt update
          sudo apt install -y --no-install-recommends libcurl4-openssl-dev libgit2-dev

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - name: Set up MySQL, ubuntu only
        run: |
          sudo /etc/init.d/mysql start
          mysql -e 'CREATE DATABASE IF NOT EXISTS testdb;' -uroot -proot

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::covr, any::xml2
          needs: coverage

      - name: Test coverage
        run: |
          cov <- covr::package_coverage(
            quiet = FALSE,
            clean = FALSE,
            install_path = file.path(normalizePath(Sys.getenv("RUNNER_TEMP"), winslash = "/"), "package")
          )
          covr::to_cobertura(cov)
        shell: Rscript {0}

      - uses: codecov/codecov-action@v4
        with:
          file: ./cobertura.xml
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Show testthat output
        if: always()
        run: |
          ## --------------------------------------------------------------------
          find '${{ runner.temp }}/package' -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-test-failures
          path: ${{ runner.temp }}/package
